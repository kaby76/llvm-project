# Test that we can set choose a configuration/build directly in the initialize
# request.

# RUN: rm -rf %t.dir2 && mkdir -p %t.dir2
# RUN: echo 'void foo(); int main() { foo(); }' > %t.dir2/main.cpp
# RUN: echo '[{"directory": "%/t.dir2", "command": "c++ main.cpp", "file": "INPUT_DIR/main.cpp"}]' > %t.dir2/compile_commands.json

# RUN: sed -e "s|INPUT_DIR|%/t.dir2|g" %s > %t.test.1

# On Windows, we need the URI in didOpen to look like "uri":"file:///C:/..."
# (with the extra slash in the front), so we add it here.
# RUN: sed -E -e "s|file://|file:///|g" %t.test.1 > %t.test

# RUN: clangd -lit-test < %t.test | FileCheck -strict-whitespace %t.test
{"jsonrpc":"2.0","id":0,"method":"initialize","params":{}}
---
{"jsonrpc":"2.0","id":1,"method":"textDocument/symbolInfo","params":{"textDocument":{"uri":"file://INPUT_DIR/main.cpp"},"position":{"line":0,"character":26}}}
#      CHECK:  "id": 1,
# CHECK-NEXT:  "jsonrpc": "2.0",
# CHECK-NEXT:    "result": [
# CHECK-NEXT:      {
# CHECK-NEXT:        "containerName": null,
# CHECK-NEXT:        "id": "CA2EBE44A1D76D2A",
# CHECK-NEXT:        "name": "foo",
# CHECK-NEXT:        "usr": "c:@F@foo#"
# CHECK-NEXT:      }
# CHECK-NEXT:    ]
# CHECK-NEXT:}
---
{"jsonrpc":"2.0","id":3,"method":"shutdown"}
---
{"jsonrpc":"2.0","method":"exit"}

# RUN: rm -rf %t.dir2
# RUN: rm -rf %t.dir2 %t.test %t.test.1
